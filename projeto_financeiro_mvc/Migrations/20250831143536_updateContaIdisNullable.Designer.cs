// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using projeto_financeiro_mvc.Data;

#nullable disable

namespace projeto_financeiro_mvc.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250831143536_updateContaIdisNullable")]
    partial class updateContaIdisNullable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("projeto_financeiro_mvc.Models.ContaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Agencia")
                        .HasColumnType("int");

                    b.Property<string>("Banco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroConta")
                        .HasColumnType("int");

                    b.Property<double>("Saldo")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Contas");
                });

            modelBuilder.Entity("projeto_financeiro_mvc.Models.LancamentoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Pago")
                        .HasColumnType("bit");

                    b.Property<int>("Parcelas")
                        .HasColumnType("int");

                    b.Property<DateTime>("Previsao")
                        .HasColumnType("datetime2");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ContaId");

                    b.ToTable("Lancamentos");
                });

            modelBuilder.Entity("projeto_financeiro_mvc.Models.RecorrenteModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRecorrente")
                        .HasColumnType("bit");

                    b.Property<bool>("Pago")
                        .HasColumnType("bit");

                    b.Property<int>("Parcelas")
                        .HasColumnType("int");

                    b.Property<DateTime>("Previsao")
                        .HasColumnType("datetime2");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ContaId");

                    b.ToTable("Recorrentes");
                });

            modelBuilder.Entity("projeto_financeiro_mvc.Models.TransferenciaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContaDestinoId")
                        .HasColumnType("int");

                    b.Property<int>("ContaOrigemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCompensacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataTransferencia")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ContaDestinoId");

                    b.HasIndex("ContaOrigemId");

                    b.ToTable("Transferencias");
                });

            modelBuilder.Entity("projeto_financeiro_mvc.Models.LancamentoModel", b =>
                {
                    b.HasOne("projeto_financeiro_mvc.Models.ContaModel", "Conta")
                        .WithMany("Lancamentos")
                        .HasForeignKey("ContaId");

                    b.Navigation("Conta");
                });

            modelBuilder.Entity("projeto_financeiro_mvc.Models.RecorrenteModel", b =>
                {
                    b.HasOne("projeto_financeiro_mvc.Models.ContaModel", "Conta")
                        .WithMany()
                        .HasForeignKey("ContaId");

                    b.Navigation("Conta");
                });

            modelBuilder.Entity("projeto_financeiro_mvc.Models.TransferenciaModel", b =>
                {
                    b.HasOne("projeto_financeiro_mvc.Models.ContaModel", "ContaDestino")
                        .WithMany()
                        .HasForeignKey("ContaDestinoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("projeto_financeiro_mvc.Models.ContaModel", "ContaOrigem")
                        .WithMany()
                        .HasForeignKey("ContaOrigemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ContaDestino");

                    b.Navigation("ContaOrigem");
                });

            modelBuilder.Entity("projeto_financeiro_mvc.Models.ContaModel", b =>
                {
                    b.Navigation("Lancamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
